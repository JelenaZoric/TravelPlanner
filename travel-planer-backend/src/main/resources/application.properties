spring.security.user.name=asd
spring.security.user.password=asd
#Spring DataSource
spring.datasource.url = jdbc:h2:mem:travelplanerbackend
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username = sa
spring.datasource.password =
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
#korisno ako je konekcija dugo u idle stanju
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#JPA-Hibernate
spring.jpa.show-sql = true	
#da ispise u konzoli upite
#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
#sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = update
#bira najbolje konvencije imenovanja za tabele i polja u bazi
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#optimizacija za mysql upite
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.datasource.initialization-mode=always
#rjesava ovo --|> InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.ftn.uns.travelplanerbackend.model.Travel["destination"]->com.ftn.uns.travelplanerbackend.model.Transportation["location"]->com.ftn.uns.travelplanerbackend.model.Location$HibernateProxy$nb3MlcMM["hibernateLazyInitializer"])
spring.jackson.serialization.fail-on-empty-beans=false